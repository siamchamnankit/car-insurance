<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:oxm="http://www.springframework.org/schema/oxm"
	xmlns:camel="http://camel.apache.org/schema/spring"
	xsi:schemaLocation="http://www.springframework.org/schema/oxm
         http://www.springframework.org/schema/oxm/spring-oxm.xsd http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

	<oxm:jaxb2-marshaller id="jaxbMarshallerBean">
		<oxm:class-to-be-bound
			name="th.co.toyota.st3.batch.config.jaxb.ReceivingConfig" />
	</oxm:jaxb2-marshaller>

	<!-- import the dataSource definition -->
	<import resource="datasource-config-test.xml" />

	<!-- enables scanning for @Transactional annotations -->
	<tx:annotation-driven />
	
	<!-- JPA EntityManagerFactory -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
		p:dataSource-ref="dataSource">
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"
				p:database="${jpa.database}" p:showSql="${jpa.showSql}" />
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
			</props>
		</property>
		<!-- BOTH Persistence Unit and Packages to Scan are NOT compatible, persistenceUnit 
			will win -->
		<property name="persistenceUnitName" value="st3main" />
		<property name="packagesToScan">
			<list>
				<value>th.co.toyota.st3.api.model</value>
			</list>
		</property>
	</bean>

	<bean id="entityManagerFactory_bfw"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
		p:dataSource-ref="dataSource_bfw">
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"
				p:database="${jpa.database}" p:showSql="${jpa.showSql}" />
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
			</props>
		</property>
		<!-- BOTH Persistence Unit and Packages to Scan are NOT compatible, persistenceUnit 
			will win -->
		<property name="persistenceUnitName" value="st3main_bfw" />
		<property name="packagesToScan" value="th.co.toyota.st3.api.model" />
	</bean>


	<!-- Transaction manager for a single JPA EntityManagerFactory (alternative 
		to JTA) -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"
		p:entityManagerFactory-ref="entityManagerFactory" primary="true"/>
		
	<bean id="transactionManager_bfw" class="org.springframework.orm.jpa.JpaTransactionManager"
		p:entityManagerFactory-ref="entityManagerFactory_bfw">
		<qualifier value="bfw" />
	</bean>			

	<!-- Let Spring create the Camel context and the Camel template, including 
		lifecycle management such as starting and stopping them -->
	<camel:camelContext id="camelContext">
		<camel:template id="camelTemplate" />
	</camel:camelContext>
	<bean
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
	
	<!-- sending -->	
	<bean id="loggerST30090" class="th.co.toyota.st3.api.util.CST30000LoggerDb"
		p:moduleId="ST3200" p:functionId="ST3009" />
		
	<!-- receiving -->	
	<bean id="loggerST31250" class="th.co.toyota.st3.api.util.CST30000LoggerDb"
		p:moduleId="ST3200" p:functionId="ST3125" />
	
	<!-- odb excel download -->
	<bean id="loggerST33020" class="th.co.toyota.st3.api.util.CST30000LoggerDb"
		p:moduleId="ST3200" p:functionId="ST3302" />
		
	<!-- document number generator -->	
	<bean id="CST32010DocNoGenerator" class="th.co.toyota.st3.api.util.CST32010DocNoGenerator" 
		scope="prototype"/>
		
</beans>
